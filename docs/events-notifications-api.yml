openapi: 3.0.3
info:
  title: Oriva Platform Events & Notifications API
  description: |
    Unified event publishing and notification aggregation system for the Oriva ecosystem.

    Features:
    - Platform event publishing and streaming
    - Cross-app notification aggregation
    - Webhook subscriptions with HMAC signatures
    - Real-time WebSocket event broadcasting

  version: 1.0.0
  contact:
    name: Oriva Platform Team
    url: https://oriva.com

servers:
  - url: https://api.oriva.com/v1
    description: Production server
  - url: http://localhost:3000/v1
    description: Local development server

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key
      description: App API key for authentication

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
        code:
          type: string
        details:
          type: array
          items:
            type: string

    PlatformEvent:
      type: object
      properties:
        event_id:
          type: string
          format: uuid
        app_id:
          type: string
        user_id:
          type: string
          format: uuid
        event_category:
          type: string
          enum: [notification, user, session, transaction]
        event_type:
          type: string
        entity_type:
          type: string
        entity_id:
          type: string
        event_data:
          type: object
        timestamp:
          type: string
          format: date-time

    Notification:
      type: object
      properties:
        notification_id:
          type: string
          format: uuid
        app_id:
          type: string
        app_name:
          type: string
        app_icon_url:
          type: string
        title:
          type: string
        body:
          type: string
        priority:
          type: string
          enum: [low, normal, high, critical]
        category:
          type: string
        action_url:
          type: string
        status:
          type: string
          enum: [unread, read, dismissed, clicked]
        created_at:
          type: string
          format: date-time

    Webhook:
      type: object
      properties:
        webhook_id:
          type: string
          format: uuid
        app_id:
          type: string
        webhook_url:
          type: string
          format: uri
        subscribed_events:
          type: array
          items:
            type: string
        is_active:
          type: boolean
        consecutive_failures:
          type: integer
        last_delivery_at:
          type: string
          format: date-time

paths:
  /apps/{appId}/events:
    post:
      summary: Publish platform event
      operationId: publishEvent
      tags: [Events]
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, event_category, event_type, entity_type, entity_id]
              properties:
                user_id:
                  type: string
                  format: uuid
                event_category:
                  type: string
                  enum: [notification, user, session, transaction]
                event_type:
                  type: string
                  pattern: ^[a-z_]+$
                entity_type:
                  type: string
                entity_id:
                  type: string
                event_data:
                  type: object
      responses:
        '200':
          description: Event published successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  event_id:
                    type: string
                    format: uuid
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication required
        '429':
          description: Rate limit exceeded

    get:
      summary: Query platform events
      operationId: queryEvents
      tags: [Events]
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: string
        - name: event_category
          in: query
          schema:
            type: string
        - name: event_type
          in: query
          schema:
            type: string
        - name: start_date
          in: query
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
            maximum: 500
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Events retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlatformEvent'
                  pagination:
                    type: object

  /apps/{appId}/notifications:
    post:
      summary: Create notification
      operationId: createNotification
      tags: [Notifications]
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, title, body, priority]
              properties:
                user_id:
                  type: string
                  format: uuid
                title:
                  type: string
                  minLength: 1
                  maxLength: 200
                body:
                  type: string
                  minLength: 1
                  maxLength: 1000
                priority:
                  type: string
                  enum: [low, normal, high, critical]
                category:
                  type: string
                external_id:
                  type: string
                action_url:
                  type: string
                icon_url:
                  type: string
                image_url:
                  type: string
                expires_at:
                  type: string
                  format: date-time
                metadata:
                  type: object
      responses:
        '201':
          description: Notification created
          content:
            application/json:
              schema:
                type: object
                properties:
                  notification_id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
        '400':
          description: Validation error
        '409':
          description: Duplicate external_id

  /users/{userId}/notifications:
    get:
      summary: Query user notifications
      operationId: queryNotifications
      tags: [Notifications]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum: [unread, read, dismissed, clicked]
        - name: app_id
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            maximum: 100
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Notifications retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
                  unread_count:
                    type: integer
                  pagination:
                    type: object

  /notifications/{id}:
    patch:
      summary: Update notification state
      operationId: updateNotification
      tags: [Notifications]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [status]
              properties:
                status:
                  type: string
                  enum: [read, dismissed, clicked]
                metadata:
                  type: object
      responses:
        '200':
          description: Notification updated
        '404':
          description: Notification not found

    delete:
      summary: Delete notification
      operationId: deleteNotification
      tags: [Notifications]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Notification deleted
        '403':
          description: Not authorized
        '404':
          description: Notification not found

  /apps/{appId}/webhooks:
    post:
      summary: Create webhook subscription
      operationId: createWebhook
      tags: [Webhooks]
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [webhook_url, subscribed_events]
              properties:
                webhook_url:
                  type: string
                  format: uri
                  pattern: ^https://
                subscribed_events:
                  type: array
                  minItems: 1
                  items:
                    type: string
      responses:
        '201':
          description: Webhook created
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhook_id:
                    type: string
                  webhook_secret:
                    type: string
        '400':
          description: Validation error (must be HTTPS)

    get:
      summary: List webhooks
      operationId: listWebhooks
      tags: [Webhooks]
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Webhooks retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhooks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Webhook'

  /apps/{appId}/webhooks/{id}:
    patch:
      summary: Update webhook
      operationId: updateWebhook
      tags: [Webhooks]
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook_url:
                  type: string
                subscribed_events:
                  type: array
                  items:
                    type: string
                is_active:
                  type: boolean
      responses:
        '200':
          description: Webhook updated
        '403':
          description: Not authorized
        '404':
          description: Webhook not found

    delete:
      summary: Delete webhook
      operationId: deleteWebhook
      tags: [Webhooks]
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Webhook deleted
        '403':
          description: Not authorized
        '404':
          description: Webhook not found
