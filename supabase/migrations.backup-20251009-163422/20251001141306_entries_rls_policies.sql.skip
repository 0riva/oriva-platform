-- Migration: Enable Row Level Security on entries table
-- Description: Restrict access so users can only read/write their own entries
-- Created: 2025-10-01

-- Enable RLS on entries table
ALTER TABLE entries ENABLE ROW LEVEL SECURITY;

-- Policy: Users can only SELECT their own entries (idempotent)
-- Users can read entries where the profile_id matches their authenticated profile
DROP POLICY IF EXISTS "Users can read their own entries" ON entries;
CREATE POLICY "Users can read their own entries"
ON entries
FOR SELECT
USING (
  profile_id IN (
    SELECT id FROM profiles WHERE account_id = auth.uid()
  )
);

-- Policy: Users can only INSERT entries for their own profile
DROP POLICY IF EXISTS "Users can create their own entries" ON entries;
CREATE POLICY "Users can create their own entries"
ON entries
FOR INSERT
WITH CHECK (
  profile_id IN (
    SELECT id FROM profiles WHERE account_id = auth.uid()
  )
);

-- Policy: Users can only UPDATE their own entries
DROP POLICY IF EXISTS "Users can update their own entries" ON entries;
CREATE POLICY "Users can update their own entries"
ON entries
FOR UPDATE
USING (
  profile_id IN (
    SELECT id FROM profiles WHERE account_id = auth.uid()
  )
)
WITH CHECK (
  profile_id IN (
    SELECT id FROM profiles WHERE account_id = auth.uid()
  )
);

-- Policy: Users can only DELETE their own entries
DROP POLICY IF EXISTS "Users can delete their own entries" ON entries;
CREATE POLICY "Users can delete their own entries"
ON entries
FOR DELETE
USING (
  profile_id IN (
    SELECT id FROM profiles WHERE account_id = auth.uid()
  )
);

-- Create index to improve RLS policy performance
CREATE INDEX IF NOT EXISTS idx_entries_profile_id
ON entries(profile_id);

-- Create index on profiles.account_id for faster lookups
CREATE INDEX IF NOT EXISTS idx_profiles_account_id
ON profiles(account_id);

-- Add comment explaining the security model
COMMENT ON TABLE entries IS 'User journal entries with RLS enabled. Users can only access entries belonging to their own profile_id.';
