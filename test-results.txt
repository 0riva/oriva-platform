
> oriva-platform@1.0.0 test
> jest --config=jest.config.js

watchman warning: Recrawled this watch 7 times, most recently because:
MustScanSubDirs UserDroppedTo resolve, please review the information on
https://facebook.github.io/watchman/docs/troubleshooting.html#recrawl
To clear this warning, run:
`watchman watch-del '/Users/cosmic/Documents/oriva-platform' ; watchman watch-project '/Users/cosmic/Documents/oriva-platform'`

üîß Setting up test environment...
‚úÖ Test environment ready
[SETUP] API Keys configured: {
  platform: 'test-api-key',
  hugoLove: 'test-api-key-hugo-love',
  hugoCareer: 'test-api-key-hugo-career'
}
FAIL tests/contract/notifications/webhooks/list.test.ts
  GET /api/v1/apps/:appId/webhooks - Contract Tests
    ‚úï should list app webhooks (25 ms)
    ‚úï should exclude webhook_secret from response (4 ms)
    ‚úï should return empty array for app with no webhooks (5 ms)
    ‚úï should enforce authentication (3 ms)
    ‚úï should enforce app isolation (3 ms)

  ‚óè GET /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should list app webhooks

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should exclude webhook_secret from response

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should return empty array for app with no webhooks

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should enforce app isolation

    AggregateError:


FAIL tests/contract/notifications/webhooks/create.test.ts
  POST /api/v1/apps/:appId/webhooks - Contract Tests
    ‚úï should create valid webhook (26 ms)
    ‚úï should reject non-HTTPS URL (4 ms)
    ‚úï should reject empty subscribed_events (4 ms)
    ‚úï should enforce authentication (2 ms)
    ‚úï should enforce rate limits (9 ms)

  ‚óè POST /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should create valid webhook

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should reject non-HTTPS URL

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should reject empty subscribed_events

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should enforce rate limits

    AggregateError:


FAIL tests/contract/notifications/delete.test.ts
  DELETE /api/v1/notifications/:id - Contract Tests
    ‚úï should delete notification (7 ms)
    ‚úï should enforce app authorization (8 ms)
    ‚úï should return 404 for non-existent notification (3 ms)
    ‚úï should enforce authentication (4 ms)
    ‚úï should cascade delete notification_state (1 ms)

  ‚óè DELETE /api/v1/notifications/:id - Contract Tests ‚Ä∫ should delete notification

    AggregateError:


  ‚óè DELETE /api/v1/notifications/:id - Contract Tests ‚Ä∫ should enforce app authorization

    AggregateError:


  ‚óè DELETE /api/v1/notifications/:id - Contract Tests ‚Ä∫ should return 404 for non-existent notification

    AggregateError:


  ‚óè DELETE /api/v1/notifications/:id - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè DELETE /api/v1/notifications/:id - Contract Tests ‚Ä∫ should cascade delete notification_state

    AggregateError:


FAIL tests/contract/notifications/query.test.ts
  GET /api/v1/users/:userId/notifications - Contract Tests
    ‚úï should return notification list for user (53 ms)
    ‚úï should filter by status (unread) (2 ms)
    ‚úï should filter by app_id (2 ms)
    ‚úï should support pagination (4 ms)
    ‚úï should exclude expired notifications (2 ms)
    ‚úï should enforce authentication (3 ms)
    ‚úï should enforce user isolation (2 ms)
    ‚úï should include app branding (1 ms)
    ‚úï should sort by priority then created_at DESC (2 ms)

  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should return notification list for user

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should filter by status (unread)

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should filter by app_id

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should support pagination

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should exclude expired notifications

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should enforce user isolation

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should include app branding

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should sort by priority then created_at DESC

    AggregateError:


FAIL tests/contract/notifications/webhooks/delete.test.ts
  DELETE /api/v1/apps/:appId/webhooks/:id - Contract Tests
    ‚úï should delete webhook (21 ms)
    ‚úï should return 404 for non-existent webhook (1 ms)
    ‚úï should enforce authentication (2 ms)
    ‚úï should enforce app authorization (2 ms)

  ‚óè DELETE /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should delete webhook

    AggregateError:


  ‚óè DELETE /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should return 404 for non-existent webhook

    AggregateError:


  ‚óè DELETE /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè DELETE /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should enforce app authorization

    AggregateError:


FAIL tests/contracts/marketplace-search.test.ts
  Marketplace Search API
    POST /api/v1/marketplace/search
      Basic Text Search
        ‚úï should search items by query string in title
        ‚úï should search items by query string in description
        ‚úï should return empty results for non-matching query
        ‚úï should handle empty query string gracefully
      Filters
        ‚úï should filter search results by item_type
        ‚úï should filter search results by price range
        ‚úï should filter search results by category_id
        ‚úï should filter search results by seller_id
        ‚úï should combine multiple filters
      Sorting
        ‚úï should sort results by price ascending
        ‚úï should sort results by price descending
        ‚úï should sort results by created_at (newest first)
        ‚úï should default to relevance sorting when no sort specified
      Pagination
        ‚úï should paginate search results (1 ms)
        ‚úï should return correct page of results
        ‚úï should enforce maximum limit of 100
      Status Filtering
        ‚úï should only return active items by default
        ‚úï should not return draft items in search results
      Semantic Search (if available)
        ‚úï should find semantically related items
        ‚úï should fallback to text search if semantic search fails
      Error Handling
        ‚úï should require authentication
        ‚úï should validate invalid sort field (1 ms)
        ‚úï should validate invalid order value
        ‚úï should handle invalid price range
      Rate Limiting
        ‚úï should enforce rate limits on search endpoint

  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Basic Text Search ‚Ä∫ should search items by query string in title

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Basic Text Search ‚Ä∫ should search items by query string in description

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Basic Text Search ‚Ä∫ should return empty results for non-matching query

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Basic Text Search ‚Ä∫ should handle empty query string gracefully

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Filters ‚Ä∫ should filter search results by item_type

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Filters ‚Ä∫ should filter search results by price range

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Filters ‚Ä∫ should filter search results by category_id

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Filters ‚Ä∫ should filter search results by seller_id

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Filters ‚Ä∫ should combine multiple filters

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Sorting ‚Ä∫ should sort results by price ascending

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Sorting ‚Ä∫ should sort results by price descending

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Sorting ‚Ä∫ should sort results by created_at (newest first)

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Sorting ‚Ä∫ should default to relevance sorting when no sort specified

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Pagination ‚Ä∫ should paginate search results

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Pagination ‚Ä∫ should return correct page of results

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Pagination ‚Ä∫ should enforce maximum limit of 100

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Status Filtering ‚Ä∫ should only return active items by default

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Status Filtering ‚Ä∫ should not return draft items in search results

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Semantic Search (if available) ‚Ä∫ should find semantically related items

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Semantic Search (if available) ‚Ä∫ should fallback to text search if semantic search fails

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Error Handling ‚Ä∫ should require authentication

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Error Handling ‚Ä∫ should validate invalid sort field

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Error Handling ‚Ä∫ should validate invalid order value

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Error Handling ‚Ä∫ should handle invalid price range

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Rate Limiting ‚Ä∫ should enforce rate limits on search endpoint

    AggregateError:


FAIL tests/contracts/marketplace-categories.test.ts
  Marketplace Categories API
    GET /api/v1/marketplace/categories
      Basic Functionality
        ‚úï should return list of marketplace categories (1 ms)
        ‚úï should return categories with required fields
        ‚úï should include standard marketplace categories (1 ms)
      Category Hierarchy
        ‚úï should support parent-child category relationships
        ‚úï should optionally return only top-level categories
        ‚úï should return subcategories for a specific parent
      Item Counts
        ‚úï should return accurate item counts per category
        ‚úï should only count active items in item_count
        ‚úï should optionally include inactive items in count
      Category Metadata
        ‚úï should include category icons if available
        ‚úï should include category display order
        ‚úï should return categories in display order by default
      Filtering and Search
        ‚úï should filter categories by search query
        ‚úï should return empty array for non-matching search
        ‚úï should filter categories with minimum item count
        ‚úï should exclude empty categories when requested
      Response Format
        ‚úï should include total count of categories
        ‚úï should return consistent slugs
      Caching Headers
        ‚úï should include appropriate cache headers
      Error Handling
        ‚úï should require authentication (1 ms)
        ‚úï should reject invalid parent_id format
        ‚úï should handle invalid min_items value
        ‚úï should return empty array for non-existent parent_id
      Rate Limiting
        ‚úï should enforce rate limits on categories endpoint
      Special Categories
        ‚úï should include "All" or uncategorized option if items exist without category
        ‚úï should not return disabled/archived categories by default

  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Basic Functionality ‚Ä∫ should return list of marketplace categories

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Basic Functionality ‚Ä∫ should return categories with required fields

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Basic Functionality ‚Ä∫ should include standard marketplace categories

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Category Hierarchy ‚Ä∫ should support parent-child category relationships

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Category Hierarchy ‚Ä∫ should optionally return only top-level categories

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Category Hierarchy ‚Ä∫ should return subcategories for a specific parent

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Item Counts ‚Ä∫ should return accurate item counts per category

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Item Counts ‚Ä∫ should only count active items in item_count

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Item Counts ‚Ä∫ should optionally include inactive items in count

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Category Metadata ‚Ä∫ should include category icons if available

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Category Metadata ‚Ä∫ should include category display order

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Category Metadata ‚Ä∫ should return categories in display order by default

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Filtering and Search ‚Ä∫ should filter categories by search query

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Filtering and Search ‚Ä∫ should return empty array for non-matching search

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Filtering and Search ‚Ä∫ should filter categories with minimum item count

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Filtering and Search ‚Ä∫ should exclude empty categories when requested

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Response Format ‚Ä∫ should include total count of categories

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Response Format ‚Ä∫ should return consistent slugs

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Caching Headers ‚Ä∫ should include appropriate cache headers

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Error Handling ‚Ä∫ should require authentication

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Error Handling ‚Ä∫ should reject invalid parent_id format

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Error Handling ‚Ä∫ should handle invalid min_items value

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Error Handling ‚Ä∫ should return empty array for non-existent parent_id

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Rate Limiting ‚Ä∫ should enforce rate limits on categories endpoint

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Special Categories ‚Ä∫ should include "All" or uncategorized option if items exist without category

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Special Categories ‚Ä∫ should not return disabled/archived categories by default

    AggregateError:


FAIL tests/integration/notification-sync.test.ts
  Integration: Notification Synchronization
    T013: Third-party app creates notification
      ‚úï should create notification from Work Buddy and verify full workflow (21 ms)
    T014: User dismisses notification in Oriva Core
      ‚úï should handle dismissal workflow and trigger webhooks
    T015: User dismisses notification in third-party app
      ‚úï should sync dismissal from third-party app to Oriva Core
    T016: User clicks notification action
      ‚úï should handle click action and record event data
    T017: Multiple apps send notifications
      ‚úï should aggregate notifications from multiple apps with proper sorting

  ‚óè Integration: Notification Synchronization ‚Ä∫ T013: Third-party app creates notification ‚Ä∫ should create notification from Work Buddy and verify full workflow

    AggregateError:


  ‚óè Integration: Notification Synchronization ‚Ä∫ T014: User dismisses notification in Oriva Core ‚Ä∫ should handle dismissal workflow and trigger webhooks

    AggregateError:


  ‚óè Integration: Notification Synchronization ‚Ä∫ T015: User dismisses notification in third-party app ‚Ä∫ should sync dismissal from third-party app to Oriva Core

    AggregateError:


  ‚óè Integration: Notification Synchronization ‚Ä∫ T016: User clicks notification action ‚Ä∫ should handle click action and record event data

    AggregateError:


  ‚óè Integration: Notification Synchronization ‚Ä∫ T017: Multiple apps send notifications ‚Ä∫ should aggregate notifications from multiple apps with proper sorting

    AggregateError:


PASS tests/affiliate/campaigns.test.ts
  Affiliate Campaign API
    POST /api/affiliate/campaigns/create
      ‚úì should create affiliate campaign with percentage commission (2 ms)
      ‚úì should create campaign with fixed commission amount (1 ms)
      ‚úì should validate commission rate is within bounds (0-100%)
      ‚úì should require authentication (1 ms)
      ‚úì should verify item ownership before creating campaign
      ‚úì should prevent creating campaign for non-marketplace items (1 ms)
      ‚úì should generate unique campaign ID
      ‚úì should set default values for optional fields
    GET /api/affiliate/campaigns
      ‚úì should list all campaigns for affiliate (4 ms)
      ‚úì should filter campaigns by status (2 ms)
      ‚úì should include item details with campaigns
      ‚úì should include campaign performance metrics
      ‚úì should sort campaigns by creation date (newest first)
      ‚úì should paginate campaign results (1 ms)
    Campaign Validation
      ‚úì should validate required fields
      ‚úì should validate campaign name length
      ‚úì should validate commission type is either percentage or fixed (1 ms)
      ‚úì should require fixed_commission_cents when type is fixed
      ‚úì should require commission_rate when type is percentage
    Campaign Permissions
      ‚úì should only allow item owner to create campaigns
      ‚úì should only allow affiliate to view their own campaigns
      ‚úì should allow item owner to deactivate any campaign for their item
    Edge Cases
      ‚úì should handle campaigns with no conversions
      ‚úì should handle expired campaigns gracefully (1 ms)
      ‚úì should handle campaigns with max conversions reached
      ‚úì should handle concurrent campaign creation

FAIL tests/contracts/conversations.test.ts
  Conversations API Contracts
    POST /api/v1/conversations - T031
      ‚úï should create a new conversation
      ‚úï should create conversation with auto-generated title if not provided
      ‚úï should reject conversation creation without authentication
      ‚úï should reject conversation creation without X-App-ID
    GET /api/v1/conversations - T032
      ‚úï should list user conversations
      ‚úï should list conversations sorted by last_message_at descending
      ‚úï should support pagination with limit parameter
      ‚úï should support pagination with offset parameter
      ‚úï should filter conversations by status (active)
      ‚úï should filter conversations by status (closed)
      ‚úï should only show conversations for current user (FR-014)
      ‚úï should reject list without authentication
    GET /api/v1/conversations/:id - T033
      ‚úï should get conversation by ID with messages
      ‚úï should include messages in chronological order
      ‚úï should reject get with invalid conversation ID format
      ‚úï should reject get with non-existent conversation ID
      ‚úï should reject get for conversation owned by different user
    DELETE /api/v1/conversations/:id - T034
      ‚úï should delete conversation and cascade to messages (FR-021)
      ‚úï should reject delete with invalid conversation ID format
      ‚úï should reject delete for non-existent conversation
      ‚úï should reject delete for conversation owned by different user
      ‚úï should reject delete without authentication
      ‚úï should handle graceful 404 on double delete

  ‚óè Conversations API Contracts ‚Ä∫ POST /api/v1/conversations - T031 ‚Ä∫ should create a new conversation

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ POST /api/v1/conversations - T031 ‚Ä∫ should create conversation with auto-generated title if not provided

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ POST /api/v1/conversations - T031 ‚Ä∫ should reject conversation creation without authentication

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ POST /api/v1/conversations - T031 ‚Ä∫ should reject conversation creation without X-App-ID

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should list user conversations

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should list conversations sorted by last_message_at descending

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should support pagination with limit parameter

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should support pagination with offset parameter

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should filter conversations by status (active)

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should filter conversations by status (closed)

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should only show conversations for current user (FR-014)

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should reject list without authentication

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations/:id - T033 ‚Ä∫ should get conversation by ID with messages

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations/:id - T033 ‚Ä∫ should include messages in chronological order

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations/:id - T033 ‚Ä∫ should reject get with invalid conversation ID format

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations/:id - T033 ‚Ä∫ should reject get with non-existent conversation ID

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations/:id - T033 ‚Ä∫ should reject get for conversation owned by different user

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should delete conversation and cascade to messages (FR-021)

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should delete conversation and cascade to messages (FR-021)

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete with invalid conversation ID format

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete with invalid conversation ID format

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete for non-existent conversation

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete for non-existent conversation

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete for conversation owned by different user

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete for conversation owned by different user

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete without authentication

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete without authentication

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should handle graceful 404 on double delete

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should handle graceful 404 on double delete

    AggregateError:


FAIL tests/contract/events/publish.test.ts
  POST /api/v1/apps/:appId/events - Contract Tests
    ‚úï should accept valid event payload (25 ms)
    ‚úï should reject invalid event_category (3 ms)
    ‚úï should reject missing required fields (1 ms)
    ‚úï should enforce authentication (4 ms)
    ‚úï should enforce rate limits (114 ms)
    ‚úï should validate app_id exists (190 ms)
    ‚úï should accept JSONB event_data (10 ms)

  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should accept valid event payload

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should reject invalid event_category

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should reject missing required fields

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should enforce rate limits

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should validate app_id exists

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should accept JSONB event_data

    AggregateError:


FAIL tests/contracts/knowledge.test.ts
  Knowledge API Contracts
    POST /api/v1/hugo/knowledge/search - T023
      ‚úï should search knowledge base with valid query
      ‚úï should return results ranked by relevance
      ‚úï should handle query without exact matches gracefully (FR-008)
      ‚úï should filter by category when specified
      ‚úï should respect max_results parameter
      ‚úï should respect min_relevance threshold
      ‚úï should only return knowledge from current app (FR-009)
    POST /api/v1/hugo/knowledge/search - Validation - T024
      ‚úï should reject search without authentication
      ‚úï should reject search without X-App-ID header
      ‚úï should reject search with missing query
      ‚úï should reject search with empty query (1 ms)
      ‚úï should reject search with query exceeding max length
      ‚úï should reject invalid max_results (below minimum)
      ‚úï should reject invalid max_results (above maximum)
      ‚úï should reject invalid min_relevance (below 0)
      ‚úï should reject invalid min_relevance (above 1)
    Knowledge Search - Performance - T025
      ‚úï should complete search within 1 second (FR-028)
      ‚úï should handle concurrent searches efficiently
    Knowledge Search - Edge Cases - T026
      ‚úï should handle special characters in query
      ‚úï should handle unicode characters in query
      ‚úï should handle very short queries
      ‚úï should handle queries with only stopwords
      ‚úï should track access count when entries are returned

  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should search knowledge base with valid query

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should return results ranked by relevance

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should handle query without exact matches gracefully (FR-008)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should filter by category when specified

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should respect max_results parameter

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should respect min_relevance threshold

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should only return knowledge from current app (FR-009)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject search without authentication

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject search without X-App-ID header

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject search with missing query

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject search with empty query

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject search with query exceeding max length

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject invalid max_results (below minimum)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject invalid max_results (above maximum)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject invalid min_relevance (below 0)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject invalid min_relevance (above 1)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Performance - T025 ‚Ä∫ should complete search within 1 second (FR-028)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Performance - T025 ‚Ä∫ should handle concurrent searches efficiently

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Edge Cases - T026 ‚Ä∫ should handle special characters in query

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Edge Cases - T026 ‚Ä∫ should handle unicode characters in query

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Edge Cases - T026 ‚Ä∫ should handle very short queries

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Edge Cases - T026 ‚Ä∫ should handle queries with only stopwords

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Edge Cases - T026 ‚Ä∫ should track access count when entries are returned

    AggregateError:


PASS tests/affiliate/resolve.test.ts
  Affiliate URL Resolution Edge Function
    Performance Requirements
      ‚úì should resolve cached URL in <100ms (1 ms)
      ‚úì should resolve uncached URL from DB in <100ms
    Cache Behavior
      ‚úì should check Redis cache first (1 ms)
      ‚úì should cache DB results with 24-hour TTL
      ‚úì should handle Redis failures gracefully (9 ms)
    Short Code Resolution
      ‚úì should resolve valid short code (1 ms)
      ‚úì should return empty array for invalid short code
      ‚úì should handle expired URLs (1 ms)
    Click Tracking
      ‚úì should extract click context from request headers (1 ms)
      ‚úì should track click asynchronously (non-blocking) (5 ms)
      ‚úì should handle tracking failures gracefully
    Geo-location
      ‚úì should capture Vercel Edge geo data
      ‚úì should handle missing geo data (1 ms)
    Error Handling
      ‚úì should redirect to homepage on invalid short code
      ‚úì should handle database errors
      ‚úì should handle malformed short codes (1 ms)
    Security
      ‚úì should sanitize short code input
      ‚úì should prevent SQL injection in short code
      ‚úì should rate limit by IP address (3 ms)
    Edge Cases
      ‚úì should handle concurrent requests for same short code
      ‚úì should handle very long URLs (3 ms)
      ‚úì should handle special characters in URLs

PASS tests/advertising/fraud.test.ts
  Advertising Fraud Scoring
    Click Fraud Detection
      ‚úì should detect bot clicks via user agent (1 ms)
      ‚úì should detect rapid clicking from same IP
      ‚úì should detect clicks without impressions
      ‚úì should detect click rate anomalies (CTR > 10%) (1 ms)
    Impression Fraud Detection
      ‚úì should detect impression stuffing (multiple ads per page)
      ‚úì should detect hidden/non-viewable impressions
      ‚úì should detect impressions with unrealistic duration (<1s)
      ‚úì should calculate viewability rate
    Conversion Fraud Detection
      ‚úì should detect conversions without clicks
      ‚úì should detect unrealistic conversion time (<5s) (1 ms)
      ‚úì should detect duplicate conversions from same user
      ‚úì should detect conversion rate anomalies (> 25%)
    Geographic Anomalies
      ‚úì should detect traffic from unexpected countries
      ‚úì should detect single-country domination (> 90%)
      ‚úì should detect VPN/datacenter IP ranges
    Device Fingerprinting
      ‚úì should detect bot-like device patterns
      ‚úì should detect unusual device-to-impression ratio
      ‚úì should track device consistency across clicks (1 ms)
    Fraud Score Calculation
      ‚úì should calculate weighted fraud score
      ‚úì should categorize fraud severity
      ‚úì should aggregate fraud signals by type
    Fraud Scoring API
      ‚úì should accept campaign_id for scoring
      ‚úì should return fraud score and breakdown (1 ms)
      ‚úì should validate campaign exists
      ‚úì should require authentication
    Recommended Actions
      ‚úì should recommend pause for score > 0.7
      ‚úì should recommend review for score 0.5-0.7
      ‚úì should recommend monitor for score < 0.5
    Edge Cases
      ‚úì should handle campaigns with no activity
      ‚úì should handle missing device info
      ‚úì should handle concurrent scoring requests (1 ms)

PASS tests/affiliate/fraud.test.ts
  Affiliate Fraud Detection
    Suspicious Click Detection
      ‚úì should detect rapid clicks from same IP (1 ms)
      ‚úì should detect bot user agents
      ‚úì should detect unusual click patterns (same user-agent + IP combo)
      ‚úì should flag clicks without referer
    Conversion Rate Anomalies
      ‚úì should detect unusually high conversion rate (> 50%)
      ‚úì should detect unusually low conversion rate (< 0.1%)
      ‚úì should calculate baseline conversion rate for comparison
      ‚úì should flag campaign if conversion rate deviates >3x from baseline
    IP Analysis
      ‚úì should detect clicks from VPN/proxy IP ranges (1 ms)
      ‚úì should detect clicks from same IP across multiple campaigns
      ‚úì should track geographic distribution of clicks
      ‚úì should flag unusual geographic patterns (all clicks from one country)
    Alert Generation
      ‚úì should generate alert for fraud score > 0.7
      ‚úì should include alert details with evidence (1 ms)
      ‚úì should categorize alert severity based on fraud score (1 ms)
      ‚úì should create alert record in database
    Fraud Detection API
      ‚úì should accept campaign_id for fraud analysis (1 ms)
      ‚úì should return fraud score and evidence (5 ms)
      ‚úì should validate campaign exists before analysis (1 ms)
      ‚úì should require authentication for fraud detection
    Fraud Metrics Aggregation
      ‚úì should calculate total fraud alerts by severity (1 ms)
      ‚úì should calculate fraud rate across all campaigns
      ‚úì should track fraud detection over time
    Edge Cases
      ‚úì should handle campaign with no clicks
      ‚úì should handle missing IP data
      ‚úì should handle concurrent fraud detection requests (1 ms)

PASS tests/advertising/serve.test.ts
  Ad Serving Edge Function
    Performance Requirements
      ‚úì should select ad in <50ms with cached segments (1 ms)
      ‚úì should select ad in <50ms without cached segments (1 ms)
    Segment-based Targeting
      ‚úì should use cached user segments for targeting
      ‚úì should compute segments on cache miss
      ‚úì should handle missing segments gracefully (1 ms)
    Real-time Relevance Scoring
      ‚úì should score ad based on segment match
      ‚úì should score ad based on keyword match
      ‚úì should factor in bid amount (20% weight)
      ‚úì should calculate total relevance score (1 ms)
      ‚úì should reject ads with score below threshold
    Budget Validation
      ‚úì should check daily budget remaining
      ‚úì should exclude campaigns that exhausted budget
      ‚úì should check campaign is within date range
      ‚úì should exclude expired campaigns (1 ms)
    Ad Selection
      ‚úì should return highest scoring ad
      ‚úì should return null if no ads meet threshold
      ‚úì should include creative with selected ad
    Impression Tracking
      ‚úì should track impression asynchronously (non-blocking)
      ‚úì should handle tracking failures gracefully (1 ms)
      ‚úì should include placement context in impression
    Fraud Prevention
      ‚úì should detect suspicious request patterns
      ‚úì should validate user agent
      ‚úì should check for duplicate impressions
    Placement Support
      ‚úì should serve ads for feed placement (1 ms)
      ‚úì should serve ads for sidebar placement
      ‚úì should reject invalid placements
    Context Enrichment
      ‚úì should extract thread keywords from context
      ‚úì should extract user interests from context
      ‚úì should handle missing context gracefully
    Edge Cases
      ‚úì should handle no active campaigns
      ‚úì should handle all campaigns with zero budget
      ‚úì should handle concurrent ad requests (2 ms)
      ‚úì should handle Redis cache failures (13 ms)

FAIL tests/contracts/auth.test.ts
  Authentication API Contracts
    POST /api/v1/auth/register - T017
      ‚úï should register a new user with valid data (12 ms)
      ‚úï should reject registration with missing email (4 ms)
      ‚úï should reject registration with invalid email format (5 ms)
      ‚úï should reject registration with weak password (2 ms)
      ‚úï should reject duplicate email registration (2 ms)
    POST /api/v1/auth/login - T018
      ‚úï should login with valid credentials (2 ms)
      ‚úï should reject login with invalid email (1 ms)
      ‚úï should reject login with invalid password (1 ms)
      ‚úï should reject login with missing credentials (2 ms)
    GET /api/v1/auth/profile - T019
      ‚úï should get user profile with valid token (1 ms)
      ‚úï should reject profile request without token (1 ms)
      ‚úï should reject profile request with invalid token (1 ms)
    PUT /api/v1/auth/profile - T019
      ‚úï should update user preferences (2 ms)
      ‚úï should reject invalid data_retention_days (5 ms)
    POST /api/v1/auth/token/refresh - T020
      ‚úï should refresh access token with valid refresh token (2 ms)
      ‚úï should reject refresh with invalid token (1 ms)
      ‚úï should reject refresh with missing token (1 ms)
    POST /api/v1/auth/logout - T021
      ‚úï should logout user with valid token (3 ms)
      ‚úï should reject logout without token (1 ms)
      ‚úï should handle logout with already logged out token gracefully (2 ms)
    DELETE /api/v1/auth/account - T022
      ‚úï should require password confirmation (2 ms)
      ‚úï should reject account deletion with incorrect password (2 ms)
      ‚úï should reject account deletion without authentication (2 ms)
      ‚úï should verify account deletion cascades to all user data (2 ms)
    Rate Limiting - T017-T022
      ‚úï should enforce rate limits for unauthenticated users (1 ms)

  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/register - T017 ‚Ä∫ should register a new user with valid data

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/register - T017 ‚Ä∫ should reject registration with missing email

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/register - T017 ‚Ä∫ should reject registration with invalid email format

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/register - T017 ‚Ä∫ should reject registration with weak password

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/register - T017 ‚Ä∫ should reject duplicate email registration

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/login - T018 ‚Ä∫ should login with valid credentials

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/login - T018 ‚Ä∫ should reject login with invalid email

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/login - T018 ‚Ä∫ should reject login with invalid password

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/login - T018 ‚Ä∫ should reject login with missing credentials

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ GET /api/v1/auth/profile - T019 ‚Ä∫ should get user profile with valid token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ GET /api/v1/auth/profile - T019 ‚Ä∫ should reject profile request without token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ GET /api/v1/auth/profile - T019 ‚Ä∫ should reject profile request with invalid token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ PUT /api/v1/auth/profile - T019 ‚Ä∫ should update user preferences

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ PUT /api/v1/auth/profile - T019 ‚Ä∫ should reject invalid data_retention_days

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/token/refresh - T020 ‚Ä∫ should refresh access token with valid refresh token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/token/refresh - T020 ‚Ä∫ should reject refresh with invalid token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/token/refresh - T020 ‚Ä∫ should reject refresh with missing token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/logout - T021 ‚Ä∫ should logout user with valid token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/logout - T021 ‚Ä∫ should reject logout without token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/logout - T021 ‚Ä∫ should handle logout with already logged out token gracefully

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ DELETE /api/v1/auth/account - T022 ‚Ä∫ should require password confirmation

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ DELETE /api/v1/auth/account - T022 ‚Ä∫ should reject account deletion with incorrect password

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ DELETE /api/v1/auth/account - T022 ‚Ä∫ should reject account deletion without authentication

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ DELETE /api/v1/auth/account - T022 ‚Ä∫ should verify account deletion cascades to all user data

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ Rate Limiting - T017-T022 ‚Ä∫ should enforce rate limits for unauthenticated users

    AggregateError:


FAIL tests/contracts/marketplace.test.ts
  Marketplace Items API Contracts
    GET /api/v1/marketplace/items - T041
      ‚úï should list marketplace items without authentication
      ‚úï should support pagination parameters
      ‚úï should filter by item_type
      ‚úï should filter by price range
      ‚úï should reject invalid pagination parameters
    POST /api/v1/marketplace/items - T042
      ‚úï should create a marketplace item with valid data
      ‚úï should reject item creation without authentication
      ‚úï should reject item creation with missing required fields
      ‚úï should reject item creation with invalid price
      ‚úï should reject item creation with invalid item_type
    GET /api/v1/marketplace/items/:id - T043
      ‚úï should get item details by ID
      ‚úï should return 404 for non-existent item
      ‚úï should return 400 for invalid item ID format
    PUT /api/v1/marketplace/items/:id - T043
      ‚úï should update item with valid data
      ‚úï should reject update without authentication
      ‚úï should reject update by non-owner
      ‚úï should reject update with invalid status transition
    DELETE /api/v1/marketplace/items/:id - T043
      ‚úï should delete item by owner
      ‚úï should reject deletion without authentication
      ‚úï should return 404 when deleting non-existent item
    Rate Limiting - T041-T043
      ‚úï should enforce rate limits for unauthenticated users

  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items - T041 ‚Ä∫ should list marketplace items without authentication

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items - T041 ‚Ä∫ should support pagination parameters

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items - T041 ‚Ä∫ should filter by item_type

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items - T041 ‚Ä∫ should filter by price range

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items - T041 ‚Ä∫ should reject invalid pagination parameters

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ POST /api/v1/marketplace/items - T042 ‚Ä∫ should create a marketplace item with valid data

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ POST /api/v1/marketplace/items - T042 ‚Ä∫ should reject item creation without authentication

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ POST /api/v1/marketplace/items - T042 ‚Ä∫ should reject item creation with missing required fields

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ POST /api/v1/marketplace/items - T042 ‚Ä∫ should reject item creation with invalid price

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ POST /api/v1/marketplace/items - T042 ‚Ä∫ should reject item creation with invalid item_type

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items/:id - T043 ‚Ä∫ should get item details by ID

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items/:id - T043 ‚Ä∫ should return 404 for non-existent item

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items/:id - T043 ‚Ä∫ should return 400 for invalid item ID format

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ PUT /api/v1/marketplace/items/:id - T043 ‚Ä∫ should update item with valid data

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ PUT /api/v1/marketplace/items/:id - T043 ‚Ä∫ should reject update without authentication

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ PUT /api/v1/marketplace/items/:id - T043 ‚Ä∫ should reject update by non-owner

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ PUT /api/v1/marketplace/items/:id - T043 ‚Ä∫ should reject update with invalid status transition

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ DELETE /api/v1/marketplace/items/:id - T043 ‚Ä∫ should delete item by owner

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ DELETE /api/v1/marketplace/items/:id - T043 ‚Ä∫ should reject deletion without authentication

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ DELETE /api/v1/marketplace/items/:id - T043 ‚Ä∫ should return 404 when deleting non-existent item

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ Rate Limiting - T041-T043 ‚Ä∫ should enforce rate limits for unauthenticated users

    AggregateError:


PASS tests/semantic/suggestions.test.ts
  Contextual Marketplace Suggestions
    User Context Analysis
      ‚úì should analyze user interests from history (1 ms)
      ‚úì should extract user skill level from activity
      ‚úì should identify user role/persona
    Thread Context Integration
      ‚úì should combine thread analysis with user context
      ‚úì should boost suggestions matching user interests (1 ms)
    Suggestion Ranking
      ‚úì should rank by relevance score
      ‚úì should apply freshness decay to old items
      ‚úì should boost popular items
    Personalization
      ‚úì should filter out previously purchased items (1 ms)
      ‚úì should respect user preferences for content type
      ‚úì should adjust for user budget range
    Diversity and Exploration
      ‚úì should ensure category diversity in suggestions
      ‚úì should include exploration items (lower relevance, high potential)
    API Request Handling
      ‚úì should accept user_id and optional thread_id
      ‚úì should return paginated suggestions
      ‚úì should include suggestion metadata
      ‚úì should validate user exists (1 ms)
      ‚úì should require authentication
    Suggestion Quality
      ‚úì should filter low-quality items
      ‚úì should boost items from trusted sellers
    Edge Cases
      ‚úì should handle user with no history
      ‚úì should handle empty suggestion pool
      ‚úì should handle concurrent suggestion requests (1 ms)

PASS tests/semantic/analyze.test.ts
  Semantic Thread Analysis
    Content Analysis
      ‚úì should extract keywords from thread content (1 ms)
      ‚úì should identify buying signals in content
      ‚úì should detect expertise/service needs
      ‚úì should extract product categories from content
    Intent Detection
      ‚úì should detect purchase intent
      ‚úì should detect research intent (1 ms)
      ‚úì should detect service request intent
      ‚úì should score intent confidence (1 ms)
    Commerce Opportunity Scoring
      ‚úì should calculate opportunity score based on intent + keywords
      ‚úì should identify high-value opportunities (score > 0.7)
      ‚úì should prioritize opportunities by score (1 ms)
    Hugo AI Integration
      ‚úì should call Hugo AI for semantic analysis
      ‚úì should extract marketplace-relevant topics
      ‚úì should handle Hugo AI errors gracefully
    Thread Context Analysis
      ‚úì should analyze thread participants for targeting
      ‚úì should track thread engagement metrics
      ‚úì should identify thread urgency
    Marketplace Suggestion Generation
      ‚úì should generate product suggestions from analysis
      ‚úì should limit suggestions based on confidence threshold
      ‚úì should include suggestion reasoning
    API Request Handling
      ‚úì should accept thread_id for analysis (1 ms)
      ‚úì should return analysis with suggestions
      ‚úì should validate thread exists before analysis (1 ms)
      ‚úì should require authentication
    Edge Cases
      ‚úì should handle empty thread content
      ‚úì should handle non-English content gracefully
      ‚úì should handle very long thread content
      ‚úì should handle concurrent analysis requests (1 ms)

PASS tests/affiliate/commissions.test.ts
  Affiliate Commission Calculation
    Percentage Commission Calculation
      ‚úì should calculate 15% commission on $100 sale
      ‚úì should calculate 20% commission on $250.50 sale
      ‚úì should handle 100% commission rate
      ‚úì should handle 1% commission rate
      ‚úì should round commission to nearest cent
    Fixed Commission Calculation
      ‚úì should use fixed commission amount regardless of sale price (1 ms)
      ‚úì should handle large fixed commissions
      ‚úì should handle small fixed commissions
    Commission Validation
      ‚úì should reject negative commission rates
      ‚úì should reject commission rates over 100%
      ‚úì should reject zero commission rate
      ‚úì should accept valid commission rates (1-100%) (1 ms)
      ‚úì should reject negative sale amounts
      ‚úì should reject zero sale amounts
    Commission Type Validation
      ‚úì should require commission_rate for percentage type
      ‚úì should require fixed_commission_cents for fixed type
      ‚úì should reject percentage campaign without rate
      ‚úì should reject fixed campaign without amount
    Multi-Currency Handling
      ‚úì should calculate commission in USD (1 ms)
      ‚úì should calculate commission in EUR
      ‚úì should maintain currency consistency
    Commission Calculation API
      ‚úì should calculate commission for valid conversion
      ‚úì should store commission with conversion record
      ‚úì should validate campaign exists before calculating
      ‚úì should validate transaction exists before calculating (1 ms)
    Edge Cases
      ‚úì should handle very small sale amounts
      ‚úì should handle very large sale amounts
      ‚úì should handle fractional percentages (converted to decimals)
      ‚úì should prevent commission exceeding sale amount
      ‚úì should handle zero fixed commission (edge case)
      ‚úì should calculate commission for refunded transactions
    Commission Aggregation
      ‚úì should sum multiple commissions
      ‚úì should calculate average commission
      ‚úì should track commission by date range (1 ms)

FAIL tests/integration/webhook-delivery.test.ts
  Integration: Webhook Delivery
    T018: App subscribes to platform events
      ‚úï should deliver webhook with HMAC signature when event occurs (17 ms)
    T019: Webhook retry on failure
      ‚úï should retry failed webhooks with exponential backoff (2 ms)
      ‚úï should disable webhook after 100 consecutive failures (2 ms)
    Webhook signature validation
      ‚úï should allow apps to verify webhook authenticity using HMAC (2 ms)

  ‚óè Integration: Webhook Delivery ‚Ä∫ T018: App subscribes to platform events ‚Ä∫ should deliver webhook with HMAC signature when event occurs

    AggregateError:


  ‚óè Integration: Webhook Delivery ‚Ä∫ T019: Webhook retry on failure ‚Ä∫ should retry failed webhooks with exponential backoff

    AggregateError:


  ‚óè Integration: Webhook Delivery ‚Ä∫ T019: Webhook retry on failure ‚Ä∫ should disable webhook after 100 consecutive failures

    AggregateError:


  ‚óè Integration: Webhook Delivery ‚Ä∫ Webhook signature validation ‚Ä∫ should allow apps to verify webhook authenticity using HMAC

    AggregateError:


  console.error
    Error occurred: {
      name: 'DatabaseError',
      message: 'User not found',
      stack: 'DatabaseError: User not found\n' +
        '    at getUserApps (/Users/cosmic/Documents/oriva-platform/api/services/userAppsService.ts:109:13)\n' +
        '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/api/routes/userApps.ts:41:42',
      url: '/api/v1/platform/users/999e8400-e29b-41d4-a716-446655440999/apps',
      method: 'GET',
      body: {}
    }

      32 | ): void => {
      33 |   // Log error for debugging
    > 34 |   console.error('Error occurred:', {
         |           ^
      35 |     name: error.name,
      36 |     message: error.message,
      37 |     stack: error.stack,

      at errorHandler (api/middleware/errorHandler.ts:34:11)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/express/lib/router/index.js:646:15
      at next (node_modules/express/lib/router/index.js:265:14)
      at next (node_modules/express/lib/router/route.js:141:14)

  console.error
    Error occurred: {
      name: 'UuidValidationError',
      message: 'Invalid user ID format. Must be a valid UUID.',
      stack: 'UuidValidationError: Invalid user ID format. Must be a valid UUID.\n' +
        '    at validateUuid (/Users/cosmic/Documents/oriva-platform/api/utils/validation.ts:49:19)\n' +
        '    at getUserApps (/Users/cosmic/Documents/oriva-platform/api/services/userAppsService.ts:56:15)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/api/routes/userApps.ts:41:59\n' +
        '    at /Users/cosmic/Documents/oriva-platform/api/middleware/errorHandler.ts:110:21\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/route.js:149:13)\n' +
        '    at requireApiKey (/Users/cosmic/Documents/oriva-platform/api/middleware/auth.ts:61:3)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/route.js:149:13)\n' +
        '    at Route.dispatch (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/route.js:119:3)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:284:15\n' +
        '    at param (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:365:14)\n' +
        '    at param (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:376:14)\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:421:3)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at optionalSchemaRouter (/Users/cosmic/Documents/oriva-platform/api/middleware/schemaRouter.ts:165:5)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at Function.handle (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:175:3)\n' +
        '    at router (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:47:12)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/api/middleware/errorHandler.ts:155:5\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at urlencodedParser (/Users/cosmic/Documents/oriva-platform/node_modules/body-parser/lib/types/urlencoded.js:94:7)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at jsonParser (/Users/cosmic/Documents/oriva-platform/node_modules/body-parser/lib/types/json.js:113:7)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at compression (/Users/cosmic/Documents/oriva-platform/node_modules/compression/index.js:243:5)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at cors (/Users/cosmic/Documents/oriva-platform/node_modules/cors/lib/index.js:188:7)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/cors/lib/index.js:224:17\n' +
        '    at originCallback (/Users/cosmic/Documents/oriva-platform/node_modules/cors/lib/index.js:214:15)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/cors/lib/index.js:219:13\n' +
        '    at optionsCallback (/Users/cosmic/Documents/oriva-platform/node_modules/cors/lib/index.js:199:9)\n' +
        '    at corsMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/cors/lib/index.js:204:7)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:531:6)\n' +
        '    at xXssProtectionMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:311:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at xPoweredByMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:304:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at xPermittedCrossDomainPoliciesMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:297:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at xFrameOptionsMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:281:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at xDownloadOptionsMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:261:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at xDnsPrefetchControlMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:254:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at xContentTypeOptionsMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:246:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at strictTransportSecurityMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:239:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at referrerPolicyMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:207:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at originAgentClusterMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:182:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at crossOriginResourcePolicyMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:175:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at crossOriginOpenerPolicyMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:159:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at contentSecurityPolicyMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:124:4)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at helmetMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:533:6)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/rou'... 678 more characters,
      url: '/api/v1/platform/users/not-a-uuid/apps',
      method: 'GET',
      body: {}
    }

      32 | ): void => {
      33 |   // Log error for debugging
    > 34 |   console.error('Error occurred:', {
         |           ^
      35 |     name: error.name,
      36 |     message: error.message,
      37 |     stack: error.stack,

      at errorHandler (api/middleware/errorHandler.ts:34:11)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/express/lib/router/index.js:646:15
      at next (node_modules/express/lib/router/index.js:265:14)
      at next (node_modules/express/lib/router/route.js:141:14)

  console.error
    Error occurred: {
      name: 'UuidValidationError',
      message: 'Invalid user ID format. Must be a valid UUID.',
      stack: 'UuidValidationError: Invalid user ID format. Must be a valid UUID.\n' +
        '    at validateUuid (/Users/cosmic/Documents/oriva-platform/api/utils/validation.ts:49:19)\n' +
        '    at getUserApps (/Users/cosmic/Documents/oriva-platform/api/services/userAppsService.ts:56:15)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/api/routes/userApps.ts:41:59\n' +
        '    at /Users/cosmic/Documents/oriva-platform/api/middleware/errorHandler.ts:110:21\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/route.js:149:13)\n' +
        '    at requireApiKey (/Users/cosmic/Documents/oriva-platform/api/middleware/auth.ts:61:3)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/route.js:149:13)\n' +
        '    at Route.dispatch (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/route.js:119:3)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:284:15\n' +
        '    at param (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:365:14)\n' +
        '    at param (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:376:14)\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:421:3)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at optionalSchemaRouter (/Users/cosmic/Documents/oriva-platform/api/middleware/schemaRouter.ts:165:5)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at Function.handle (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:175:3)\n' +
        '    at router (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:47:12)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/api/middleware/errorHandler.ts:155:5\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at urlencodedParser (/Users/cosmic/Documents/oriva-platform/node_modules/body-parser/lib/types/urlencoded.js:94:7)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at jsonParser (/Users/cosmic/Documents/oriva-platform/node_modules/body-parser/lib/types/json.js:113:7)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at compression (/Users/cosmic/Documents/oriva-platform/node_modules/compression/index.js:243:5)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at cors (/Users/cosmic/Documents/oriva-platform/node_modules/cors/lib/index.js:188:7)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/cors/lib/index.js:224:17\n' +
        '    at originCallback (/Users/cosmic/Documents/oriva-platform/node_modules/cors/lib/index.js:214:15)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/cors/lib/index.js:219:13\n' +
        '    at optionsCallback (/Users/cosmic/Documents/oriva-platform/node_modules/cors/lib/index.js:199:9)\n' +
        '    at corsMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/cors/lib/index.js:204:7)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:328:13)\n' +
        '    at /Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:286:9\n' +
        '    at Function.process_params (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:346:12)\n' +
        '    at next (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/index.js:280:10)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:531:6)\n' +
        '    at xXssProtectionMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:311:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at xPoweredByMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:304:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at xPermittedCrossDomainPoliciesMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:297:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at xFrameOptionsMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:281:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at xDownloadOptionsMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:261:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at xDnsPrefetchControlMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:254:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at xContentTypeOptionsMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:246:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at strictTransportSecurityMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:239:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at referrerPolicyMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:207:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at originAgentClusterMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:182:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at crossOriginResourcePolicyMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:175:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at crossOriginOpenerPolicyMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:159:3)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at contentSecurityPolicyMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:124:4)\n' +
        '    at internalNext (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:529:6)\n' +
        '    at helmetMiddleware (/Users/cosmic/Documents/oriva-platform/node_modules/helmet/index.cjs:533:6)\n' +
        '    at Layer.handle [as handle_request] (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/router/layer.js:95:5)\n' +
        '    at trim_prefix (/Users/cosmic/Documents/oriva-platform/node_modules/express/lib/rou'... 678 more characters,
      url: '/api/v1/platform/users/invalid-uuid-format/apps',
      method: 'GET',
      body: {}
    }

      32 | ): void => {
      33 |   // Log error for debugging
    > 34 |   console.error('Error occurred:', {
         |           ^
      35 |     name: error.name,
      36 |     message: error.message,
      37 |     stack: error.stack,

      at errorHandler (api/middleware/errorHandler.ts:34:11)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/express/lib/router/index.js:646:15
      at next (node_modules/express/lib/router/index.js:265:14)
      at next (node_modules/express/lib/router/route.js:141:14)

PASS tests/contract/platform/test_user_apps.test.ts
  GET /api/v1/platform/users/{userId}/apps
    Contract Validation
      ‚úì should return user's accessible apps with roles (40 ms)
      ‚úì should filter by app status when provided (9 ms)
      ‚úì should return 404 for non-existent user (39 ms)
      ‚úì should validate UUID format for userId (10 ms)
      ‚úì should require API key authentication (2 ms)
      ‚úì should include only active user-app relationships by default (10 ms)
    OpenAPI Contract Compliance
      ‚úì should match OpenAPI schema for successful response (19 ms)
      ‚úì should return error matching OpenAPI Error schema (6 ms)

PASS tests/integration/test_server_setup.test.ts
  Multi-Tenant Server Setup
    Server Initialization
      ‚úì should create Express app successfully
      ‚úì should respond to health check (7 ms)
    Platform Routes Registration
      ‚úì should have POST /api/v1/platform/apps endpoint (13 ms)
      ‚úì should have GET /api/v1/platform/apps endpoint (2 ms)
      ‚úì should have GET /api/v1/platform/users/:userId/apps endpoint (2 ms)
      ‚úì should have POST /api/v1/platform/extraction/prepare endpoint (2 ms)
    Hugo AI Routes Registration
      ‚úì should have POST /api/v1/hugo-ai/sessions endpoint (22 ms)
      ‚úì should have GET /api/v1/hugo-ai/insights endpoint (14 ms)
    App Routes Registration
      ‚úì should have POST /api/v1/apps/profiles endpoint (14 ms)
      ‚úì should have GET /api/v1/apps/ice-breakers endpoint (14 ms)
    Error Handling
      ‚úì should return 404 for undefined routes (2 ms)
      ‚úì should handle errors with proper JSON format (2 ms)
    Security Headers
      ‚úì should include security headers (1 ms)

PASS tests/contract/platform/test_apps_get.test.ts
  GET /api/v1/platform/apps
    Contract Validation
      ‚úì should return list of available apps (15 ms)
      ‚úì should filter apps by status when provided (9 ms)
      ‚úì should require API key authentication (3 ms)
      ‚úì should support pagination parameters (6 ms)
    OpenAPI Contract Compliance
      ‚úì should match OpenAPI schema for successful response (9 ms)
      ‚úì should return error matching OpenAPI Error schema (9 ms)

PASS tests/contract/apps/test_ice_breakers_get.test.ts
  GET /api/v1/apps/ice-breakers
    Contract Validation - Hugo Love Ice Breakers
      ‚úì should return personalized ice breakers for hugo_love (63 ms)
      ‚úì should only work for hugo_love app (app-specific feature) (33 ms)
      ‚úì should return 404 for unsupported apps like hugo_career (25 ms)
      ‚úì should require profile_id query parameter (20 ms)
      ‚úì should validate profile_id UUID format (31 ms)
      ‚úì should require X-App-ID header (4 ms)
      ‚úì should require API key authentication (14 ms)
      ‚úì should support limit parameter (28 ms)
      ‚úì should filter by minimum confidence (25 ms)
      ‚úì should filter by category (28 ms)
      ‚úì should return empty array when no ice breakers available (30 ms)
    OpenAPI Contract Compliance
      ‚úì should match OpenAPI schema for successful response (67 ms)
      ‚úì should return error matching OpenAPI Error schema (74 ms)

FAIL tests/contract/platform/test_apps_post.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/platform/test_apps_post.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/platform/test_extraction_prepare.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/platform/test_extraction_prepare.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

PASS tests/contract/apps/test_profiles_get.test.ts
  GET /api/v1/apps/profiles
    Contract Validation - Hugo Love Profiles
      ‚úì should list dating profiles from hugo_love schema (133 ms)
      ‚úì should support pagination parameters (62 ms)
      ‚úì should require X-App-ID header for schema routing (4 ms)
      ‚úì should require API key authentication (39 ms)
      ‚úì should return JSONB profile_data structures (117 ms)
    Contract Validation - Hugo Career Profiles
      ‚úì should list profiles from hugo_career schema (107 ms)
      ‚úì should isolate profiles between apps (106 ms)
    OpenAPI Contract Compliance
      ‚úì should match OpenAPI schema for successful response (156 ms)
      ‚úì should return error matching OpenAPI Error schema (3 ms)

PASS tests/contract/hugo-ai/test_insights_get.test.ts
  GET /api/v1/hugo-ai/insights
    Contract Validation
      ‚úì should return user insights with cross-app data (140 ms)
      ‚úì should filter by confidence threshold (94 ms)
      ‚úì should filter by insight_type (89 ms)
      ‚úì should filter by source_app_id (120 ms)
      ‚úì should require authentication (54 ms)
      ‚úì should reject invalid Bearer token format (43 ms)
      ‚úì should require X-App-ID header for schema routing (6 ms)
      ‚úì should require API key authentication (22 ms)
      ‚úì should only return insights with cross_app_visibility=true from other apps (44 ms)
      ‚úì should support pagination parameters (162 ms)
    OpenAPI Contract Compliance
      ‚úì should match OpenAPI schema for successful response (137 ms)
      ‚úì should return error matching OpenAPI Error schema (3 ms)

FAIL tests/contract/platform/test_extraction_execute.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/platform/test_extraction_execute.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/platform/test_user_delete_gdpr.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/platform/test_user_delete_gdpr.test.ts[0m:[93m13[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m13[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/hugo-ai/test_sessions_patch.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/hugo-ai/test_sessions_patch.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/integration/websocket-realtime.test.ts
  Integration: Real-time Notification Updates via WebSocket
    T020: Real-time notification updates
      ‚úï should broadcast notification events to multiple WebSocket clients (4 ms)
      ‚úï should handle notification expiry and remove from all clients (2 ms)
      ‚úï should enforce per-user connection limits (2009 ms)
      ‚úï should maintain connection state across reconnects (4 ms)

  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should broadcast notification events to multiple WebSocket clients

    Test functions cannot both take a 'done' callback and return something. Either use a 'done' callback, or return a promise.
    Returned value: Promise {}

      37 |   // T020: Real-time notification updates
      38 |   describe('T020: Real-time notification updates', () => {
    > 39 |     it('should broadcast notification events to multiple WebSocket clients', async (done) => {
         |       ^
      40 |       let client1: WebSocket;
      41 |       let client2: WebSocket;
      42 |       let notificationId: string;

      at tests/integration/websocket-realtime.test.ts:39:7
      at tests/integration/websocket-realtime.test.ts:38:11
      at Object.<anonymous> (tests/integration/websocket-realtime.test.ts:14:9)

  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should handle notification expiry and remove from all clients

    Test functions cannot both take a 'done' callback and return something. Either use a 'done' callback, or return a promise.
    Returned value: Promise {}

      193 |     }, 20000);
      194 |
    > 195 |     it('should handle notification expiry and remove from all clients', async (done) => {
          |       ^
      196 |       let client1: WebSocket;
      197 |       let client2: WebSocket;
      198 |       let notificationId: string;

      at tests/integration/websocket-realtime.test.ts:195:7
      at tests/integration/websocket-realtime.test.ts:38:11
      at Object.<anonymous> (tests/integration/websocket-realtime.test.ts:14:9)

  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    Expected done to be called once, but it was called multiple times.

      308 |         // Cleanup
      309 |         connections.forEach((ws) => ws.close());
    > 310 |         done();
          |         ^
      311 |       });
      312 |
      313 |       rejectedConnection.on('error', () => {

      at WebSocket.<anonymous> (tests/integration/websocket-realtime.test.ts:310:9)
      at WebSocket.emitClose (node_modules/ws/lib/websocket.js:262:12)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1042:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    Expected done to be called once, but it was called multiple times.

      308 |         // Cleanup
      309 |         connections.forEach((ws) => ws.close());
    > 310 |         done();
          |         ^
      311 |       });
      312 |
      313 |       rejectedConnection.on('error', () => {

      at WebSocket.<anonymous> (tests/integration/websocket-realtime.test.ts:310:9)
      at WebSocket.emitClose (node_modules/ws/lib/websocket.js:262:12)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1042:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should maintain connection state across reconnects

    Test functions cannot both take a 'done' callback and return something. Either use a 'done' callback, or return a promise.
    Returned value: Promise {}

      325 |     }, 10000);
      326 |
    > 327 |     it('should maintain connection state across reconnects', async (done) => {
          |       ^
      328 |       let client: WebSocket;
      329 |       const receivedEvents: any[] = [];
      330 |       let notificationId: string;

      at tests/integration/websocket-realtime.test.ts:327:7
      at tests/integration/websocket-realtime.test.ts:38:11
      at Object.<anonymous> (tests/integration/websocket-realtime.test.ts:14:9)

FAIL tests/contract/hugo-ai/test_sessions_post.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/hugo-ai/test_sessions_post.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/hugo-ai/test_insights_post.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/hugo-ai/test_insights_post.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/notifications/update.test.ts (5.285 s)
  PATCH /api/v1/notifications/:id - Contract Tests
    ‚úï should mark notification as read (23 ms)
    ‚úï should dismiss notification (2 ms)
    ‚úï should mark as clicked (3 ms)
    ‚úï should handle idempotent dismissal (6 ms)
    ‚úï should reject invalid status transition (2 ms)
    ‚úï should enforce authentication (9 ms)
    ‚úï should return 404 for non-existent notification (2 ms)

  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should mark notification as read

    AggregateError:


  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should dismiss notification

    AggregateError:


  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should mark as clicked

    AggregateError:


  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should handle idempotent dismissal

    AggregateError:


  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should reject invalid status transition

    AggregateError:


  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should return 404 for non-existent notification

    AggregateError:


FAIL tests/contract/apps/test_profiles_post.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/apps/test_profiles_post.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/notifications/create.test.ts (5.254 s)
  POST /api/v1/apps/:appId/notifications - Contract Tests
    ‚úï should create valid notification (135 ms)
    ‚úï should reject title > 200 chars (7 ms)
    ‚úï should reject empty title (2 ms)
    ‚úï should reject body > 1000 chars (3 ms)
    ‚úï should reject invalid priority (2 ms)
    ‚úï should prevent duplicate external_id (1 ms)
    ‚úï should enforce authentication (2 ms)
    ‚úï should enforce rate limits (239 ms)

  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should create valid notification

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should reject title > 200 chars

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should reject empty title

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should reject body > 1000 chars

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should reject invalid priority

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should prevent duplicate external_id

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should enforce rate limits

    AggregateError:


FAIL tests/contract/events/query.test.ts (5.308 s)
  GET /api/v1/apps/:appId/events - Contract Tests
    ‚úï should retrieve event list with pagination (125 ms)
    ‚úï should filter by event_category (2 ms)
    ‚úï should filter by event_type (3 ms)
    ‚úï should filter by date range (5 ms)
    ‚úï should support pagination with limit and offset (2 ms)
    ‚úï should enforce authentication (2 ms)
    ‚úï should enforce app isolation - apps only see their own events (3 ms)
    ‚úï should return 404 for non-existent app (3 ms)
    ‚úï should sort events by created_at DESC (4 ms)

  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should retrieve event list with pagination

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should filter by event_category

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should filter by event_type

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should filter by date range

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should support pagination with limit and offset

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should enforce app isolation - apps only see their own events

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should return 404 for non-existent app

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should sort events by created_at DESC

    AggregateError:


FAIL tests/contract/notifications/webhooks/update.test.ts (5.305 s)
  PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests
    ‚úï should update webhook URL (22 ms)
    ‚úï should update subscribed_events (4 ms)
    ‚úï should toggle is_active (2 ms)
    ‚úï should return 404 for non-existent webhook (2 ms)
    ‚úï should enforce authentication (2 ms)
    ‚úï should enforce app authorization (1 ms)

  ‚óè PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should update webhook URL

    AggregateError:


  ‚óè PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should update subscribed_events

    AggregateError:


  ‚óè PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should toggle is_active

    AggregateError:


  ‚óè PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should return 404 for non-existent webhook

    AggregateError:


  ‚óè PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should enforce app authorization

    AggregateError:


FAIL tests/integration/test_schema_isolation.test.ts
  ‚óè Test suite failed to run

    [96mtests/integration/test_schema_isolation.test.ts[0m:[93m14[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../test-utils/supabase' or its corresponding type declarations.

    [7m14[0m import { mockSupabase } from '../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/integration/test_cross_app_insights.test.ts
  ‚óè Test suite failed to run

    [96mtests/integration/test_cross_app_insights.test.ts[0m:[93m14[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../test-utils/supabase' or its corresponding type declarations.

    [7m14[0m import { mockSupabase } from '../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contracts/chat.test.ts
  ‚óè Test suite failed to run

    [96mtests/contracts/chat.test.ts[0m:[93m92[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'length' does not exist on type 'unknown'.

    [7m92[0m         if (doneEvent!.knowledge_sources.length > 0) {
    [7m  [0m [91m                                         ~~~~~~[0m

(node:40139) [JEST-01] DeprecationWarning: 'matchers' property was accessed on [Object] after it was soft deleted
  Jest deletes objects that were set on the global scope between test files to reduce memory leaks.
  Currently it only "soft" deletes them and emits this warning if those objects were accessed after their deletion.
  In future versions of Jest, this behavior will change to "on", which will likely fail tests.
  You can change the behavior in your test configuration now to reduce memory usage.
(Use `node --trace-deprecation ...` to show where the warning was created)
(node:40139) [JEST-01] DeprecationWarning: 'currentlyRunningTest' property was accessed on [Object] after it was soft deleted
  Jest deletes objects that were set on the global scope between test files to reduce memory leaks.
  Currently it only "soft" deletes them and emits this warning if those objects were accessed after their deletion.
  In future versions of Jest, this behavior will change to "on", which will likely fail tests.
  You can change the behavior in your test configuration now to reduce memory usage.
FAIL tests/contract/events/stream.test.ts (12.318 s)
  WSS /api/v1/events/stream - Contract Tests
    ‚úï should accept WebSocket connection with valid token (20 ms)
    ‚úï should reject WebSocket connection with invalid token (37 ms)
    ‚úï should acknowledge event subscription message (3 ms)
    ‚úï should broadcast events when published (5011 ms)
    ‚úï should limit concurrent connections per user (2003 ms)
    ‚úï should handle heartbeat ping/pong (2 ms)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should accept WebSocket connection with valid token

    Failed: [AggregateError]

      28 |
      29 |     ws.on('error', (error) => {
    > 30 |       done(error);
         |       ^
      31 |     });
      32 |   }, 10000);
      33 |

      at WebSocket.<anonymous> (tests/contract/events/stream.test.ts:30:7)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1041:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should reject WebSocket connection with invalid token

    Expected done to be called once, but it was called multiple times.

      49 |       // Closed due to auth failure
      50 |       expect(code).toBeGreaterThan(1000);
    > 51 |       done();
         |       ^
      52 |     });
      53 |   }, 10000);
      54 |

      at WebSocket.<anonymous> (tests/contract/events/stream.test.ts:51:7)
      at WebSocket.emitClose (node_modules/ws/lib/websocket.js:262:12)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1042:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should reject WebSocket connection with invalid token

    Expected done to be called once, but it was called multiple times.

      49 |       // Closed due to auth failure
      50 |       expect(code).toBeGreaterThan(1000);
    > 51 |       done();
         |       ^
      52 |     });
      53 |   }, 10000);
      54 |

      at WebSocket.<anonymous> (tests/contract/events/stream.test.ts:51:7)
      at WebSocket.emitClose (node_modules/ws/lib/websocket.js:262:12)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1042:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should acknowledge event subscription message

    Failed: [AggregateError]

      80 |
      81 |     ws.on('error', (error) => {
    > 82 |       done(error);
         |       ^
      83 |     });
      84 |   }, 10000);
      85 |

      at WebSocket.<anonymous> (tests/contract/events/stream.test.ts:82:7)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1041:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should broadcast events when published

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should broadcast events when published

    No event received within timeout

      119 |     setTimeout(() => {
      120 |       ws.close();
    > 121 |       done(new Error('No event received within timeout'));
          |            ^
      122 |     }, 5000);
      123 |   }, 10000);
      124 |

      at Timeout._onTimeout (tests/contract/events/stream.test.ts:121:12)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should handle heartbeat ping/pong

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      166 |
      167 |     ws.on('close', () => {
    > 168 |       expect(pongReceived).toBe(true);
          |                            ^
      169 |       done();
      170 |     });
      171 |

      at WebSocket.<anonymous> (tests/contract/events/stream.test.ts:168:28)
      at WebSocket.emitClose (node_modules/ws/lib/websocket.js:262:12)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1042:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should handle heartbeat ping/pong

    Failed: [AggregateError]

      171 |
      172 |     ws.on('error', (error) => {
    > 173 |       done(error);
          |       ^
      174 |     });
      175 |   }, 10000);
      176 | });

      at WebSocket.<anonymous> (tests/contract/events/stream.test.ts:173:7)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1041:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks. Active timers can also cause this, ensure that .unref() was called on them.
Summary of all failing tests
FAIL tests/contract/notifications/webhooks/list.test.ts
  ‚óè GET /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should list app webhooks

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should exclude webhook_secret from response

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should return empty array for app with no webhooks

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should enforce app isolation

    AggregateError:


FAIL tests/contract/notifications/webhooks/create.test.ts
  ‚óè POST /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should create valid webhook

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should reject non-HTTPS URL

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should reject empty subscribed_events

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/webhooks - Contract Tests ‚Ä∫ should enforce rate limits

    AggregateError:


FAIL tests/contract/notifications/delete.test.ts
  ‚óè DELETE /api/v1/notifications/:id - Contract Tests ‚Ä∫ should delete notification

    AggregateError:


  ‚óè DELETE /api/v1/notifications/:id - Contract Tests ‚Ä∫ should enforce app authorization

    AggregateError:


  ‚óè DELETE /api/v1/notifications/:id - Contract Tests ‚Ä∫ should return 404 for non-existent notification

    AggregateError:


  ‚óè DELETE /api/v1/notifications/:id - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè DELETE /api/v1/notifications/:id - Contract Tests ‚Ä∫ should cascade delete notification_state

    AggregateError:


FAIL tests/contract/notifications/query.test.ts
  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should return notification list for user

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should filter by status (unread)

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should filter by app_id

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should support pagination

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should exclude expired notifications

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should enforce user isolation

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should include app branding

    AggregateError:


  ‚óè GET /api/v1/users/:userId/notifications - Contract Tests ‚Ä∫ should sort by priority then created_at DESC

    AggregateError:


FAIL tests/contract/notifications/webhooks/delete.test.ts
  ‚óè DELETE /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should delete webhook

    AggregateError:


  ‚óè DELETE /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should return 404 for non-existent webhook

    AggregateError:


  ‚óè DELETE /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè DELETE /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should enforce app authorization

    AggregateError:


FAIL tests/contracts/marketplace-search.test.ts
  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Basic Text Search ‚Ä∫ should search items by query string in title

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Basic Text Search ‚Ä∫ should search items by query string in description

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Basic Text Search ‚Ä∫ should return empty results for non-matching query

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Basic Text Search ‚Ä∫ should handle empty query string gracefully

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Filters ‚Ä∫ should filter search results by item_type

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Filters ‚Ä∫ should filter search results by price range

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Filters ‚Ä∫ should filter search results by category_id

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Filters ‚Ä∫ should filter search results by seller_id

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Filters ‚Ä∫ should combine multiple filters

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Sorting ‚Ä∫ should sort results by price ascending

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Sorting ‚Ä∫ should sort results by price descending

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Sorting ‚Ä∫ should sort results by created_at (newest first)

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Sorting ‚Ä∫ should default to relevance sorting when no sort specified

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Pagination ‚Ä∫ should paginate search results

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Pagination ‚Ä∫ should return correct page of results

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Pagination ‚Ä∫ should enforce maximum limit of 100

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Status Filtering ‚Ä∫ should only return active items by default

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Status Filtering ‚Ä∫ should not return draft items in search results

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Semantic Search (if available) ‚Ä∫ should find semantically related items

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Semantic Search (if available) ‚Ä∫ should fallback to text search if semantic search fails

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Error Handling ‚Ä∫ should require authentication

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Error Handling ‚Ä∫ should validate invalid sort field

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Error Handling ‚Ä∫ should validate invalid order value

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Error Handling ‚Ä∫ should handle invalid price range

    AggregateError:


  ‚óè Marketplace Search API ‚Ä∫ POST /api/v1/marketplace/search ‚Ä∫ Rate Limiting ‚Ä∫ should enforce rate limits on search endpoint

    AggregateError:


FAIL tests/contracts/marketplace-categories.test.ts
  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Basic Functionality ‚Ä∫ should return list of marketplace categories

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Basic Functionality ‚Ä∫ should return categories with required fields

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Basic Functionality ‚Ä∫ should include standard marketplace categories

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Category Hierarchy ‚Ä∫ should support parent-child category relationships

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Category Hierarchy ‚Ä∫ should optionally return only top-level categories

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Category Hierarchy ‚Ä∫ should return subcategories for a specific parent

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Item Counts ‚Ä∫ should return accurate item counts per category

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Item Counts ‚Ä∫ should only count active items in item_count

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Item Counts ‚Ä∫ should optionally include inactive items in count

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Category Metadata ‚Ä∫ should include category icons if available

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Category Metadata ‚Ä∫ should include category display order

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Category Metadata ‚Ä∫ should return categories in display order by default

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Filtering and Search ‚Ä∫ should filter categories by search query

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Filtering and Search ‚Ä∫ should return empty array for non-matching search

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Filtering and Search ‚Ä∫ should filter categories with minimum item count

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Filtering and Search ‚Ä∫ should exclude empty categories when requested

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Response Format ‚Ä∫ should include total count of categories

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Response Format ‚Ä∫ should return consistent slugs

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Caching Headers ‚Ä∫ should include appropriate cache headers

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Error Handling ‚Ä∫ should require authentication

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Error Handling ‚Ä∫ should reject invalid parent_id format

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Error Handling ‚Ä∫ should handle invalid min_items value

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Error Handling ‚Ä∫ should return empty array for non-existent parent_id

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Rate Limiting ‚Ä∫ should enforce rate limits on categories endpoint

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Special Categories ‚Ä∫ should include "All" or uncategorized option if items exist without category

    AggregateError:


  ‚óè Marketplace Categories API ‚Ä∫ GET /api/v1/marketplace/categories ‚Ä∫ Special Categories ‚Ä∫ should not return disabled/archived categories by default

    AggregateError:


FAIL tests/integration/notification-sync.test.ts
  ‚óè Integration: Notification Synchronization ‚Ä∫ T013: Third-party app creates notification ‚Ä∫ should create notification from Work Buddy and verify full workflow

    AggregateError:


  ‚óè Integration: Notification Synchronization ‚Ä∫ T014: User dismisses notification in Oriva Core ‚Ä∫ should handle dismissal workflow and trigger webhooks

    AggregateError:


  ‚óè Integration: Notification Synchronization ‚Ä∫ T015: User dismisses notification in third-party app ‚Ä∫ should sync dismissal from third-party app to Oriva Core

    AggregateError:


  ‚óè Integration: Notification Synchronization ‚Ä∫ T016: User clicks notification action ‚Ä∫ should handle click action and record event data

    AggregateError:


  ‚óè Integration: Notification Synchronization ‚Ä∫ T017: Multiple apps send notifications ‚Ä∫ should aggregate notifications from multiple apps with proper sorting

    AggregateError:


FAIL tests/contracts/conversations.test.ts
  ‚óè Conversations API Contracts ‚Ä∫ POST /api/v1/conversations - T031 ‚Ä∫ should create a new conversation

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ POST /api/v1/conversations - T031 ‚Ä∫ should create conversation with auto-generated title if not provided

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ POST /api/v1/conversations - T031 ‚Ä∫ should reject conversation creation without authentication

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ POST /api/v1/conversations - T031 ‚Ä∫ should reject conversation creation without X-App-ID

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should list user conversations

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should list conversations sorted by last_message_at descending

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should support pagination with limit parameter

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should support pagination with offset parameter

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should filter conversations by status (active)

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should filter conversations by status (closed)

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should only show conversations for current user (FR-014)

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations - T032 ‚Ä∫ should reject list without authentication

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations/:id - T033 ‚Ä∫ should get conversation by ID with messages

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations/:id - T033 ‚Ä∫ should include messages in chronological order

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations/:id - T033 ‚Ä∫ should reject get with invalid conversation ID format

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations/:id - T033 ‚Ä∫ should reject get with non-existent conversation ID

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ GET /api/v1/conversations/:id - T033 ‚Ä∫ should reject get for conversation owned by different user

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should delete conversation and cascade to messages (FR-021)

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should delete conversation and cascade to messages (FR-021)

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete with invalid conversation ID format

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete with invalid conversation ID format

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete for non-existent conversation

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete for non-existent conversation

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete for conversation owned by different user

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete for conversation owned by different user

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete without authentication

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should reject delete without authentication

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should handle graceful 404 on double delete

    AggregateError:


  ‚óè Conversations API Contracts ‚Ä∫ DELETE /api/v1/conversations/:id - T034 ‚Ä∫ should handle graceful 404 on double delete

    AggregateError:


FAIL tests/contract/events/publish.test.ts
  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should accept valid event payload

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should reject invalid event_category

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should reject missing required fields

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should enforce rate limits

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should validate app_id exists

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should accept JSONB event_data

    AggregateError:


FAIL tests/contracts/knowledge.test.ts
  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should search knowledge base with valid query

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should return results ranked by relevance

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should handle query without exact matches gracefully (FR-008)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should filter by category when specified

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should respect max_results parameter

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should respect min_relevance threshold

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - T023 ‚Ä∫ should only return knowledge from current app (FR-009)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject search without authentication

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject search without X-App-ID header

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject search with missing query

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject search with empty query

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject search with query exceeding max length

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject invalid max_results (below minimum)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject invalid max_results (above maximum)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject invalid min_relevance (below 0)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ POST /api/v1/hugo/knowledge/search - Validation - T024 ‚Ä∫ should reject invalid min_relevance (above 1)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Performance - T025 ‚Ä∫ should complete search within 1 second (FR-028)

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Performance - T025 ‚Ä∫ should handle concurrent searches efficiently

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Edge Cases - T026 ‚Ä∫ should handle special characters in query

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Edge Cases - T026 ‚Ä∫ should handle unicode characters in query

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Edge Cases - T026 ‚Ä∫ should handle very short queries

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Edge Cases - T026 ‚Ä∫ should handle queries with only stopwords

    AggregateError:


  ‚óè Knowledge API Contracts ‚Ä∫ Knowledge Search - Edge Cases - T026 ‚Ä∫ should track access count when entries are returned

    AggregateError:


FAIL tests/contracts/auth.test.ts
  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/register - T017 ‚Ä∫ should register a new user with valid data

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/register - T017 ‚Ä∫ should reject registration with missing email

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/register - T017 ‚Ä∫ should reject registration with invalid email format

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/register - T017 ‚Ä∫ should reject registration with weak password

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/register - T017 ‚Ä∫ should reject duplicate email registration

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/login - T018 ‚Ä∫ should login with valid credentials

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/login - T018 ‚Ä∫ should reject login with invalid email

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/login - T018 ‚Ä∫ should reject login with invalid password

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/login - T018 ‚Ä∫ should reject login with missing credentials

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ GET /api/v1/auth/profile - T019 ‚Ä∫ should get user profile with valid token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ GET /api/v1/auth/profile - T019 ‚Ä∫ should reject profile request without token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ GET /api/v1/auth/profile - T019 ‚Ä∫ should reject profile request with invalid token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ PUT /api/v1/auth/profile - T019 ‚Ä∫ should update user preferences

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ PUT /api/v1/auth/profile - T019 ‚Ä∫ should reject invalid data_retention_days

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/token/refresh - T020 ‚Ä∫ should refresh access token with valid refresh token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/token/refresh - T020 ‚Ä∫ should reject refresh with invalid token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/token/refresh - T020 ‚Ä∫ should reject refresh with missing token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/logout - T021 ‚Ä∫ should logout user with valid token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/logout - T021 ‚Ä∫ should reject logout without token

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ POST /api/v1/auth/logout - T021 ‚Ä∫ should handle logout with already logged out token gracefully

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ DELETE /api/v1/auth/account - T022 ‚Ä∫ should require password confirmation

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ DELETE /api/v1/auth/account - T022 ‚Ä∫ should reject account deletion with incorrect password

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ DELETE /api/v1/auth/account - T022 ‚Ä∫ should reject account deletion without authentication

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ DELETE /api/v1/auth/account - T022 ‚Ä∫ should verify account deletion cascades to all user data

    AggregateError:


  ‚óè Authentication API Contracts ‚Ä∫ Rate Limiting - T017-T022 ‚Ä∫ should enforce rate limits for unauthenticated users

    AggregateError:


FAIL tests/contracts/marketplace.test.ts
  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items - T041 ‚Ä∫ should list marketplace items without authentication

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items - T041 ‚Ä∫ should support pagination parameters

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items - T041 ‚Ä∫ should filter by item_type

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items - T041 ‚Ä∫ should filter by price range

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items - T041 ‚Ä∫ should reject invalid pagination parameters

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ POST /api/v1/marketplace/items - T042 ‚Ä∫ should create a marketplace item with valid data

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ POST /api/v1/marketplace/items - T042 ‚Ä∫ should reject item creation without authentication

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ POST /api/v1/marketplace/items - T042 ‚Ä∫ should reject item creation with missing required fields

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ POST /api/v1/marketplace/items - T042 ‚Ä∫ should reject item creation with invalid price

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ POST /api/v1/marketplace/items - T042 ‚Ä∫ should reject item creation with invalid item_type

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items/:id - T043 ‚Ä∫ should get item details by ID

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items/:id - T043 ‚Ä∫ should return 404 for non-existent item

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ GET /api/v1/marketplace/items/:id - T043 ‚Ä∫ should return 400 for invalid item ID format

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ PUT /api/v1/marketplace/items/:id - T043 ‚Ä∫ should update item with valid data

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ PUT /api/v1/marketplace/items/:id - T043 ‚Ä∫ should reject update without authentication

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ PUT /api/v1/marketplace/items/:id - T043 ‚Ä∫ should reject update by non-owner

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ PUT /api/v1/marketplace/items/:id - T043 ‚Ä∫ should reject update with invalid status transition

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ DELETE /api/v1/marketplace/items/:id - T043 ‚Ä∫ should delete item by owner

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ DELETE /api/v1/marketplace/items/:id - T043 ‚Ä∫ should reject deletion without authentication

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ DELETE /api/v1/marketplace/items/:id - T043 ‚Ä∫ should return 404 when deleting non-existent item

    AggregateError:


  ‚óè Marketplace Items API Contracts ‚Ä∫ Rate Limiting - T041-T043 ‚Ä∫ should enforce rate limits for unauthenticated users

    AggregateError:


FAIL tests/integration/webhook-delivery.test.ts
  ‚óè Integration: Webhook Delivery ‚Ä∫ T018: App subscribes to platform events ‚Ä∫ should deliver webhook with HMAC signature when event occurs

    AggregateError:


  ‚óè Integration: Webhook Delivery ‚Ä∫ T019: Webhook retry on failure ‚Ä∫ should retry failed webhooks with exponential backoff

    AggregateError:


  ‚óè Integration: Webhook Delivery ‚Ä∫ T019: Webhook retry on failure ‚Ä∫ should disable webhook after 100 consecutive failures

    AggregateError:


  ‚óè Integration: Webhook Delivery ‚Ä∫ Webhook signature validation ‚Ä∫ should allow apps to verify webhook authenticity using HMAC

    AggregateError:


FAIL tests/contract/platform/test_apps_post.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/platform/test_apps_post.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/platform/test_extraction_prepare.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/platform/test_extraction_prepare.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/platform/test_extraction_execute.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/platform/test_extraction_execute.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/platform/test_user_delete_gdpr.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/platform/test_user_delete_gdpr.test.ts[0m:[93m13[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m13[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/hugo-ai/test_sessions_patch.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/hugo-ai/test_sessions_patch.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/integration/websocket-realtime.test.ts
  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should broadcast notification events to multiple WebSocket clients

    Test functions cannot both take a 'done' callback and return something. Either use a 'done' callback, or return a promise.
    Returned value: Promise {}

      37 |   // T020: Real-time notification updates
      38 |   describe('T020: Real-time notification updates', () => {
    > 39 |     it('should broadcast notification events to multiple WebSocket clients', async (done) => {
         |       ^
      40 |       let client1: WebSocket;
      41 |       let client2: WebSocket;
      42 |       let notificationId: string;

      at tests/integration/websocket-realtime.test.ts:39:7
      at tests/integration/websocket-realtime.test.ts:38:11
      at Object.<anonymous> (tests/integration/websocket-realtime.test.ts:14:9)

  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should handle notification expiry and remove from all clients

    Test functions cannot both take a 'done' callback and return something. Either use a 'done' callback, or return a promise.
    Returned value: Promise {}

      193 |     }, 20000);
      194 |
    > 195 |     it('should handle notification expiry and remove from all clients', async (done) => {
          |       ^
      196 |       let client1: WebSocket;
      197 |       let client2: WebSocket;
      198 |       let notificationId: string;

      at tests/integration/websocket-realtime.test.ts:195:7
      at tests/integration/websocket-realtime.test.ts:38:11
      at Object.<anonymous> (tests/integration/websocket-realtime.test.ts:14:9)

  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    AggregateError:


  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    Expected done to be called once, but it was called multiple times.

      308 |         // Cleanup
      309 |         connections.forEach((ws) => ws.close());
    > 310 |         done();
          |         ^
      311 |       });
      312 |
      313 |       rejectedConnection.on('error', () => {

      at WebSocket.<anonymous> (tests/integration/websocket-realtime.test.ts:310:9)
      at WebSocket.emitClose (node_modules/ws/lib/websocket.js:262:12)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1042:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should enforce per-user connection limits

    Expected done to be called once, but it was called multiple times.

      308 |         // Cleanup
      309 |         connections.forEach((ws) => ws.close());
    > 310 |         done();
          |         ^
      311 |       });
      312 |
      313 |       rejectedConnection.on('error', () => {

      at WebSocket.<anonymous> (tests/integration/websocket-realtime.test.ts:310:9)
      at WebSocket.emitClose (node_modules/ws/lib/websocket.js:262:12)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1042:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè Integration: Real-time Notification Updates via WebSocket ‚Ä∫ T020: Real-time notification updates ‚Ä∫ should maintain connection state across reconnects

    Test functions cannot both take a 'done' callback and return something. Either use a 'done' callback, or return a promise.
    Returned value: Promise {}

      325 |     }, 10000);
      326 |
    > 327 |     it('should maintain connection state across reconnects', async (done) => {
          |       ^
      328 |       let client: WebSocket;
      329 |       const receivedEvents: any[] = [];
      330 |       let notificationId: string;

      at tests/integration/websocket-realtime.test.ts:327:7
      at tests/integration/websocket-realtime.test.ts:38:11
      at Object.<anonymous> (tests/integration/websocket-realtime.test.ts:14:9)

FAIL tests/contract/hugo-ai/test_sessions_post.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/hugo-ai/test_sessions_post.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/hugo-ai/test_insights_post.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/hugo-ai/test_insights_post.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/notifications/update.test.ts (5.285 s)
  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should mark notification as read

    AggregateError:


  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should dismiss notification

    AggregateError:


  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should mark as clicked

    AggregateError:


  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should handle idempotent dismissal

    AggregateError:


  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should reject invalid status transition

    AggregateError:


  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè PATCH /api/v1/notifications/:id - Contract Tests ‚Ä∫ should return 404 for non-existent notification

    AggregateError:


FAIL tests/contract/apps/test_profiles_post.test.ts
  ‚óè Test suite failed to run

    [96mtests/contract/apps/test_profiles_post.test.ts[0m:[93m11[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../test-utils/supabase' or its corresponding type declarations.

    [7m11[0m import { mockSupabase } from '../../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contract/notifications/create.test.ts (5.254 s)
  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should create valid notification

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should reject title > 200 chars

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should reject empty title

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should reject body > 1000 chars

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should reject invalid priority

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should prevent duplicate external_id

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè POST /api/v1/apps/:appId/notifications - Contract Tests ‚Ä∫ should enforce rate limits

    AggregateError:


FAIL tests/contract/events/query.test.ts (5.308 s)
  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should retrieve event list with pagination

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should filter by event_category

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should filter by event_type

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should filter by date range

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should support pagination with limit and offset

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should enforce app isolation - apps only see their own events

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should return 404 for non-existent app

    AggregateError:


  ‚óè GET /api/v1/apps/:appId/events - Contract Tests ‚Ä∫ should sort events by created_at DESC

    AggregateError:


FAIL tests/contract/notifications/webhooks/update.test.ts (5.305 s)
  ‚óè PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should update webhook URL

    AggregateError:


  ‚óè PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should update subscribed_events

    AggregateError:


  ‚óè PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should toggle is_active

    AggregateError:


  ‚óè PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should return 404 for non-existent webhook

    AggregateError:


  ‚óè PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should enforce authentication

    AggregateError:


  ‚óè PATCH /api/v1/apps/:appId/webhooks/:id - Contract Tests ‚Ä∫ should enforce app authorization

    AggregateError:


FAIL tests/integration/test_schema_isolation.test.ts
  ‚óè Test suite failed to run

    [96mtests/integration/test_schema_isolation.test.ts[0m:[93m14[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../test-utils/supabase' or its corresponding type declarations.

    [7m14[0m import { mockSupabase } from '../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/integration/test_cross_app_insights.test.ts
  ‚óè Test suite failed to run

    [96mtests/integration/test_cross_app_insights.test.ts[0m:[93m14[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../test-utils/supabase' or its corresponding type declarations.

    [7m14[0m import { mockSupabase } from '../../test-utils/supabase';
    [7m  [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

FAIL tests/contracts/chat.test.ts
  ‚óè Test suite failed to run

    [96mtests/contracts/chat.test.ts[0m:[93m92[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'length' does not exist on type 'unknown'.

    [7m92[0m         if (doneEvent!.knowledge_sources.length > 0) {
    [7m  [0m [91m                                         ~~~~~~[0m

FAIL tests/contract/events/stream.test.ts (12.318 s)
  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should accept WebSocket connection with valid token

    Failed: [AggregateError]

      28 |
      29 |     ws.on('error', (error) => {
    > 30 |       done(error);
         |       ^
      31 |     });
      32 |   }, 10000);
      33 |

      at WebSocket.<anonymous> (tests/contract/events/stream.test.ts:30:7)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1041:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should reject WebSocket connection with invalid token

    Expected done to be called once, but it was called multiple times.

      49 |       // Closed due to auth failure
      50 |       expect(code).toBeGreaterThan(1000);
    > 51 |       done();
         |       ^
      52 |     });
      53 |   }, 10000);
      54 |

      at WebSocket.<anonymous> (tests/contract/events/stream.test.ts:51:7)
      at WebSocket.emitClose (node_modules/ws/lib/websocket.js:262:12)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1042:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should reject WebSocket connection with invalid token

    Expected done to be called once, but it was called multiple times.

      49 |       // Closed due to auth failure
      50 |       expect(code).toBeGreaterThan(1000);
    > 51 |       done();
         |       ^
      52 |     });
      53 |   }, 10000);
      54 |

      at WebSocket.<anonymous> (tests/contract/events/stream.test.ts:51:7)
      at WebSocket.emitClose (node_modules/ws/lib/websocket.js:262:12)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1042:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should acknowledge event subscription message

    Failed: [AggregateError]

      80 |
      81 |     ws.on('error', (error) => {
    > 82 |       done(error);
         |       ^
      83 |     });
      84 |   }, 10000);
      85 |

      at WebSocket.<anonymous> (tests/contract/events/stream.test.ts:82:7)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1041:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should broadcast events when published

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should broadcast events when published

    No event received within timeout

      119 |     setTimeout(() => {
      120 |       ws.close();
    > 121 |       done(new Error('No event received within timeout'));
          |            ^
      122 |     }, 5000);
      123 |   }, 10000);
      124 |

      at Timeout._onTimeout (tests/contract/events/stream.test.ts:121:12)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should limit concurrent connections per user

    AggregateError:


  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should handle heartbeat ping/pong

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      166 |
      167 |     ws.on('close', () => {
    > 168 |       expect(pongReceived).toBe(true);
          |                            ^
      169 |       done();
      170 |     });
      171 |

      at WebSocket.<anonymous> (tests/contract/events/stream.test.ts:168:28)
      at WebSocket.emitClose (node_modules/ws/lib/websocket.js:262:12)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1042:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)

  ‚óè WSS /api/v1/events/stream - Contract Tests ‚Ä∫ should handle heartbeat ping/pong

    Failed: [AggregateError]

      171 |
      172 |     ws.on('error', (error) => {
    > 173 |       done(error);
          |       ^
      174 |     });
      175 |   }, 10000);
      176 | });

      at WebSocket.<anonymous> (tests/contract/events/stream.test.ts:173:7)
      at emitErrorAndClose (node_modules/ws/lib/websocket.js:1041:13)
      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:881:5)


Test Suites: 31 failed, 14 passed, 45 total
Tests:       227 failed, 284 passed, 511 total
Snapshots:   0 total
Time:        13.19 s
Ran all test suites.
üßπ Cleaning up test environment...
‚úÖ Test environment cleaned up
