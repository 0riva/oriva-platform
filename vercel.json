{
  "version": 2,
  "regions": [
    "iad1",
    "sfo1",
    "cdg1"
  ],
  "env": {
    "NODE_ENV": "production"
  },
  "build": {
    "env": {
      "NODE_ENV": "production"
    }
  },
  "functions": {
    "api/**/*.ts": {
      "runtime": "nodejs20.x",
      "maxDuration": 10,
      "memory": 1024,
      "regions": [
        "iad1",
        "sfo1",
        "fra1"
      ]
    },
    "api/v1/hugo/chat.ts": {
      "runtime": "nodejs20.x",
      "maxDuration": 30,
      "memory": 2048,
      "regions": [
        "iad1",
        "sfo1",
        "fra1"
      ]
    },
    "api/v1/hugo/knowledge/search.ts": {
      "runtime": "nodejs20.x",
      "maxDuration": 5,
      "memory": 512,
      "regions": [
        "iad1",
        "sfo1",
        "fra1"
      ]
    }
  },
  "routes": [
    {
      "src": "/api/health",
      "dest": "/api/health.ts"
    },
    {
      "src": "/api/alerts",
      "dest": "/api/alerts.ts",
      "methods": ["GET"]
    },
    {
      "src": "/api/v1/chat",
      "dest": "/api/v1/chat.ts",
      "methods": ["POST"]
    },
    {
      "src": "/api/v1/auth/register",
      "dest": "/api/v1/auth/register.ts",
      "methods": ["POST"]
    },
    {
      "src": "/api/v1/auth/login",
      "dest": "/api/v1/auth/login.ts",
      "methods": ["POST"]
    },
    {
      "src": "/api/v1/knowledge/search",
      "dest": "/api/v1/knowledge/search.ts",
      "methods": ["POST"]
    },
    {
      "src": "/api/v1/conversations",
      "dest": "/api/v1/conversations/index.ts",
      "methods": ["GET", "POST"]
    },
    {
      "src": "/api/v1/conversations/([^/]+)",
      "dest": "/api/v1/conversations/$1.ts",
      "methods": ["GET", "DELETE"]
    }
  ],
  "headers": [
    {
      "source": "/api/(.*)",
      "headers": [
        {
          "key": "Access-Control-Allow-Origin",
          "value": "*"
        },
        {
          "key": "Access-Control-Allow-Methods",
          "value": "GET, POST, PUT, DELETE, OPTIONS"
        },
        {
          "key": "Access-Control-Allow-Headers",
          "value": "Authorization, Content-Type, X-Request-ID, X-App-ID"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-XSS-Protection",
          "value": "1; mode=block"
        }
      ]
    },
    {
      "source": "/api/v1/hugo/personality-schemas/(.*)",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=900, stale-while-revalidate=1800"
        },
        {
          "key": "CDN-Cache-Control",
          "value": "public, max-age=900"
        }
      ]
    },
    {
      "source": "/api/health",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=30, must-revalidate"
        }
      ]
    }
  ],
  "rewrites": [
    {
      "source": "/api/(.*)",
      "destination": "/api/$1"
    }
  ],
  "outputDirectory": "public"
}